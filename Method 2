#include <stdio.h>

void fill1(int a[], int neg, int pos)
{
  if (neg % 2 == 1)
  {
    for(int i = 1; i < neg; i += 2)
    {
      int c = a[i];
      int d = a[i + neg];
      int temp = c;
      a[i] = d;
      a[i + neg] = temp;
     }
   }
   else
   {
      for(int i = 1; i <= neg; i += 2)
      {
         int c = a[i];
         int d = a[i + neg - 1];
         int temp = c;
         a[i] = d;
         a[i + neg - 1] = temp;
       }
    }
}

void fill2(int a[], int neg, int pos)
{
    if (pos % 2 == 1)
    {
      for(int i = 1; i < pos; i += 2)
      {
        int c = a[i];
        int d = a[i + pos];
        int temp = c;
        a[i] = d;
        a[i + pos] = temp;
      }
    }
    else
    {
       for(int i = 1; i <= pos; i += 2)
       {
         int c = a[i];
         int d = a[i + pos - 1];
         int temp = c;
         a[i] = d;
         a[i + pos - 1] = temp;
       }
    }
}

// Reverse the array
void reverse(int a[], int n)
{
   int i, k, t;
   for(i = 0; i < n / 2; i++)
   {
     t = a[i];
     a[i] = a[n - i - 1];
     a[n - i - 1] = t;
   }
}

// A utility function to print an array 'arr[]' of size 'n'
void printArray(int arr[], int n)
{
   for (int i = 0; i < n; i++)
     printf("%d ", arr[i]);
   printf("\n");
}

// Driver code
int main()
{

   int n;
   scanf("%d", &n);

   int arr[n];
   for(int i=0; i<n; i++)
     scanf("%d", &arr[i]);

   printf("Given array is \n");
   printArray(arr, n);

   int neg = 0, pos = 0;
   for(int i = 0; i < n; i++)
   {
      if (arr[i] < 0)
      neg++;
      else
      pos++;
   }

   //sort the array
   for(int i=0; i<n-1; i++){
    for(int j=i+1; j<n; j++){
      if(arr[i]>arr[j]){
       int temp =arr[i];
       arr[i]=arr[j];
       arr[j]=temp;
      }
    }  
  }
  printArray(arr, n);

  if (neg <= pos)
  {
     fill1(arr, neg, pos);
  }
   else
   {
     // Reverse the array in this condition
     int i, k, t;
     for(i = 0; i < n / 2; i++)
     {
        t = arr[i];
        arr[i] = arr[n - i - 1];
        arr[n - i - 1] = t;
      }
      fill2(arr, neg, pos);
    }
    printf("Rearranged array is \n");
    printArray(arr, n);

    return 0;
}
